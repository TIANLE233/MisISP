# general settings #####################################################################################################
name: PyNET_354
model_type: TripleRAWISPModel
num_gpu: 4 # 0 for cpu mode
manual_seed: 3407
bit: 0 # data type


# network structure ####################################################################################################
network_g:
  type: PyNET
  level: 0


# path #################################################################################################################
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
  # param_key_g: params
  param_key_g: params_ema


# training settings ####################################################################################################
train:
  # basic setting
  gt_size: 256
  batch_size_per_gpu: 4
  total_iter: 500000
  ema_decay: 0.999

  # optimizer setting
  optim_g:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [ 0.9, 0.999 ]

  ## scheduler setting
  scheduler:
    type: CosineAnnealingRestartLR
    periods: [ 500000 ]
    restart_weights: [ 1 ]
    eta_min: !!float 1e-7

  # scheduler:
  #   type: MultiStepLR
  #   milestones: [ 50000, 100000, 200000, 300000, 400000, 450000]
  #   gamma: 0.5

  # loss setting
  
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  # patch_opt:
  #   type: ADLossall
  #   loss_weight: 0.001 ##0.01
  #   amp_weight: 1.0
  #   phase_weight: 1.0
  #   use_fft: True
  #   # layer_weights: {'conv1_2': 1.0, 'conv2_2': 1.0, 'conv3_2': 1.0, 'conv4_2': 1.0, 'conv5_2': 1.0}
  #   layer_weights: {'conv2_2': 1.0, 'conv4_2': 1.0 }

    # type: FDLoss
    # phase_weight: 0 

    # type: PerceptualCXLoss
    # loss_weight: 1.0
    # reduction: mean
    # sigma: 0.2

    # type: CDFL1HistogramLoss
    # loss_weight: 1.0

    # type: ContextualLoss
    # band_width: !!float 0.5
    # vgg_layer: conv4_4
    # loss_type: cosine
    # loss_weight: !!float 1.0
    # reduction: mean

    # type: CoBiLoss
    # band_width: !!float 0.5
    # vgg_layer: conv4_4
    # loss_type: cosine
    # loss_weight: !!float 1.0
    # reduction: mean

  # ssim_opt:
  #   type: SSIMLoss
  #   loss_weight: 0.1
  #   reduction: mean

  # psnr_opt:
  #   type: PSNRLoss
  #   loss_weight: 1.0
  #   reduction: mean

  # perceptual_opt:
  #   type: PerceptualLoss
  #   layer_weights: {'relu1_2': 1.,'relu2_2': 1.,'relu3_2': 1.,'relu4_2': 1.}
  #   vgg_type: 'vgg19'
  #   use_input_norm: True
  #   range_norm: False
  #   perceptual_weight: 1.0
  #   style_weight: 0.
  #   criterion: 'l1'


# validation settings ##################################################################################################
val:
  val_freq: 100000
  save_img: true
  suffix: ~

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false
    niqe:
      type: calculate_niqe
      crop_border: 0
